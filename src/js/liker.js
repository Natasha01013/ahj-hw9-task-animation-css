export function liker() {
    document.querySelector('.liker').addEventListener('click', function(event) {
        const heart = document.createElement('div');
        heart.classList.add('heart');
        document.body.appendChild(heart);
        
        const rect = event.target.getBoundingClientRect(); // Получим координаты кнопки и на их основе позиционируем сердечки
        heart.style.left = `${rect.left + rect.width / 2 - 15}px`; //Ставим сердечко по центру относительно кнопки
        heart.style.top = `${rect.top}px`; // Сердечко появится в верхней части кнопки
        
        const trajectories = [ //Массив возможных траекторий для анимации сердечек
// 0% - Начальная позиция (центр): первое значение в массиве - смещение по оси X в начальной точке (0%), 
// т.е. по горизонтали сердечко стартует с центра (смещение 0 пикселей).
//25% - Позиция через 25% времени анимации: второе значение  — смещение по оси X на 25% пути анимации. 
//50% - Позиция через 50% времени анимации: третье значение - смещение по оси X в середине анимации.
//75% - Позиция через 75% времени анимации: четвертое значение — это смещение по оси X на 75% пути. 
//100% - Конечная позиция: это смещение по оси X в конце анимации (100%). Оно равно 0 - возвращение в центр.
            [0, -50, 0, 50, 0], //Сердечко начинается в центре (0), отклоняется на -50 пикселей влево через 25%, затем возвращается в центр на 50%, и в конечной точке возвращается в центр
            [0, 0, 50, -50, 0], //Начинается в центре (0), отклоняется на 50 пикселей вправо через 50%, затем на -50 пикселей влево, и снова возвращается в центр
            [0, 50, 0, -50, 0] //Начинается в центре, отклоняется на 50 пикселей вправо через 25%, возвращается в центр через 50%, а затем отклоняется влево на 50 пикселей
        ];
        
        const chosenTrajectory = trajectories[Math.floor(Math.random() * trajectories.length)]; //Случайным образом выбираем одну из траекторий из массива trajectories
        heart.style.setProperty('--offset1', `${chosenTrajectory[1]}px`);
        heart.style.setProperty('--offset2', `${chosenTrajectory[2]}px`);
        heart.style.setProperty('--offset3', `${chosenTrajectory[3]}px`);
        
        heart.addEventListener('animationend', () => heart.remove()); //Событие animationend срабатывает, когда анимация (которая была применена к элементу) завершается
    });
}